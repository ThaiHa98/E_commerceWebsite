// <auto-generated />
using System;
using E_commerceWebsite.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace E_commerceWebsite.Infrastructure.Migrations
{
    [DbContext(typeof(E_commerceWebsiteDbContext))]
    partial class E_commerceWebsiteDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.Brand", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date_Create")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Update")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("GuidId");

                    b.ToTable("Brand", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.Cart", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date_Create")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date_Update")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Gift_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image_url")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("Product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Product_name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(28, 10)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total_price")
                        .HasColumnType("decimal(28, 10)");

                    b.Property<decimal>("Unit_price")
                        .HasColumnType("decimal(28, 10)");

                    b.Property<Guid>("User_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Voucher_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GuidId");

                    b.ToTable("Cart", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date_Create")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Product_Type")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("GuidId");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.Department", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("User_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GuidId");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.Gift", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("DiscountValue")
                        .HasColumnType("decimal(28, 10)");

                    b.Property<DateTime?>("End_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image_url")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ProductGiftCondition")
                        .HasColumnType("int");

                    b.Property<Guid>("Product_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Start_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("GuidId");

                    b.ToTable("Gift", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.Invoice", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date_Create")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Update")
                        .HasColumnType("datetime");

                    b.Property<string>("Image_url")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(28, 10)");

                    b.Property<int>("Type")
                        .HasMaxLength(250)
                        .HasColumnType("int");

                    b.Property<Guid>("Warehouse_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GuidId");

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.KeyApp", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("Id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("NameKey")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ServiceKeyId")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("KeyApp", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("Date_Create")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Update")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Full_name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Note")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Order_status")
                        .HasColumnType("int");

                    b.Property<int>("Payment_Method")
                        .HasColumnType("int");

                    b.Property<int>("Payment_Status")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Total_amount")
                        .HasColumnType("decimal(28, 10)");

                    b.Property<Guid>("User_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GuidId");

                    b.ToTable("Order", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.Order_Detail", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image_url")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("Order_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Product_name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(28, 10)");

                    b.Property<decimal>("Total_price")
                        .HasColumnType("decimal(28, 10)");

                    b.Property<decimal>("Unit_price")
                        .HasColumnType("decimal(28, 10)");

                    b.HasKey("GuidId");

                    b.ToTable("Order_Detail", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.Permissions", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GuidId");

                    b.ToTable("Permissions", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Brand_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Category_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Colors")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Date_Create")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Update")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Image_url")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("GuidId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.Product_Detail", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date_Create")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Update")
                        .HasColumnType("datetime");

                    b.Property<string>("Image_url")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("Product_Warehouse_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Product_Warehouse_quantity")
                        .HasColumnType("decimal(28, 10)");

                    b.Property<Guid>("Product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(28, 10)");

                    b.HasKey("GuidId");

                    b.ToTable("Product_Detail", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.Product_Price_Discount", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date_Create")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Update")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Discount_amount")
                        .HasColumnType("decimal(28, 10)");

                    b.Property<decimal?>("Discount_percentage")
                        .HasColumnType("decimal(28, 10)");

                    b.Property<DateTime?>("End_date")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(28, 10)");

                    b.Property<Guid>("Product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Start_date")
                        .HasColumnType("datetime");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GuidId");

                    b.ToTable("Product_Price_Discount", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.Product_Warehouse", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Product_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(28, 10)");

                    b.Property<Guid>("Warehouse_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GuidId");

                    b.ToTable("Product_Warehouse", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.RolePermissions", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CommandCode")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FunctionCode")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("Permission_Id")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Role_Id")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Role_Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("GuidId");

                    b.ToTable("RolePermissions", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.Roles", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("GuidId");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date_Create")
                        .HasColumnType("datetime");

                    b.Property<string>("Date_of_birth")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("First_name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Last_name")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Password")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Phone")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("GuidId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.UserRoles", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Role_Id")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Role_Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("User_Id")
                        .HasMaxLength(50)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("User_Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("GuidId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.Voucher", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Discount_type")
                        .HasColumnType("int");

                    b.Property<decimal>("Discount_value")
                        .HasColumnType("decimal(28, 10)");

                    b.Property<DateTime?>("End_date")
                        .HasColumnType("datetime");

                    b.Property<decimal>("Min_purchase_amount")
                        .HasColumnType("decimal(28, 10)");

                    b.Property<DateTime?>("Start_date")
                        .HasColumnType("datetime");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("GuidId");

                    b.ToTable("Voucher", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.Warehouse", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date_Create")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Update")
                        .HasColumnType("datetime");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("GuidId");

                    b.ToTable("Warehouse", (string)null);
                });

            modelBuilder.Entity("E_commerceWebsite.Domain.Entities.WarehouseInvoiceDetail", b =>
                {
                    b.Property<Guid>("GuidId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("Date_Create")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Date_Update")
                        .HasColumnType("datetime");

                    b.Property<Guid>("Invoice_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Product_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(28, 10)");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(28, 10)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(28, 10)");

                    b.Property<Guid>("Warehouse_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GuidId");

                    b.ToTable("WarehouseInvoiceDetail", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
